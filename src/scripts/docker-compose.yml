# Exemplo que utilizei como base para este Docker Compose:
# https://github.com/grafana/adventure/blob/main/docker-compose.yml
services:
  alloy:
    image: grafana/alloy:v1.7.5
    ports:
      - 12345:12345
      - 4318:4318
      - 4317:4317
    volumes:
      - ./config.alloy:/etc/alloy/config.alloy
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    depends_on:
      - loki

  prometheus:
    image: prom/prometheus:v3.1.0
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command: --config.file=/etc/prometheus/prometheus.yml --web.enable-otlp-receiver --enable-feature=exemplar-storage

  loki:
    image: grafana/loki:3.4.2
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana:11.5.2
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_FEATURE_TOGGLES_ENABLE=accessControlOnCall
    ports:
      - 3000:3000/tcp
    volumes:
      - ./grafana:/etc/grafana/provisioning
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml

# Tempo
  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  init:
    image: &tempoImage grafana/tempo:2.7.1
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tempo-data:/var/tempo

  memcached:
    image: memcached:1.6.29
    container_name: memcached
    ports:
      - "11211:11211"
    environment:
      - MEMCACHED_MAX_MEMORY=64m  # Set the maximum memory usage
      - MEMCACHED_THREADS=4       # Number of threads to use

  tempo:
    image: *tempoImage
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200"   # tempo
    depends_on:
      - init
      - memcached

  postgres:
    image: postgres
    volumes:
      - ./BaseContagemPostgreSql.sql:/docker-entrypoint-initdb.d/1-basecontagem.sql
    environment:
      POSTGRES_PASSWORD: "Postgres2025!"
    ports:
      - "5432:5432"

  mysql:
    image: mysql:9.0
    volumes:
      - ./BaseContagemMySql.sql:/docker-entrypoint-initdb.d/1-basecontagem.sql
    environment:
      MYSQL_ROOT_PASSWORD: "MySql2025!"
      MYSQL_DATABASE: "basecontagem"
    ports:
      - "3306:3306"